// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShareBook.Infrastructure;

#nullable disable

namespace ShareBook.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230509064419_Restore foreign key")]
    partial class Restoreforeignkey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShareBook.Domain.Books.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Labels")
                        .HasColumnType("text")
                        .HasColumnName("labels");

                    b.Property<string>("Owner")
                        .HasColumnType("text")
                        .HasColumnName("owner");

                    b.Property<int>("Pages")
                        .HasColumnType("integer")
                        .HasColumnName("pages");

                    b.Property<bool>("SharedByOwner")
                        .HasColumnType("boolean")
                        .HasColumnName("sharedByOwner");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pK_books");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("ShareBook.Domain.Books.Book", b =>
                {
                    b.OwnsOne("ShareBook.Domain.Books.LoanRequest", "CurrentLoanRequest", b1 =>
                        {
                            b1.Property<Guid>("bookId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("currentLoanRequest_CreatedAt");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("currentLoanRequest_Id");

                            b1.Property<string>("RequestingUser")
                                .HasColumnType("text")
                                .HasColumnName("currentLoanRequest_RequestingUser");

                            b1.Property<int>("Status")
                                .HasColumnType("integer")
                                .HasColumnName("currentLoanRequest_Status");

                            b1.HasKey("bookId")
                                .HasName("pK_books");

                            b1.ToTable("books");

                            b1.WithOwner()
                                .HasForeignKey("bookId")
                                .HasConstraintName("fK_books_books_id");
                        });

                    b.Navigation("CurrentLoanRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
